import * as React from "react";
import styled from '@emotion/styled';
import { useRive } from "rive-react";
import { motion, AnimatePresence } from "framer-motion";

const Header = styled.header`
  padding: 10px 40px;
  display: flex;
  position: fixed;
  background-color: #0E101E;
  height: 72px;
  align-items: center;
  justify-content: space-around;
  overflow: hidden;
  width: 320px;
  border-bottom: 10px solid;
  border-image-slice: 1;
  border-width: 3px;
  border-image-source:  linear-gradient(-45deg, #FF3366, #CB5EEE, #ee7752,   #FFCC33, #00B3CC,  #E233FF, #23a6d5);
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  transition-duration: .15s;
  transition-property: all;
  animation: gradient 5s ease infinite;
  animation: gradient 5s ease infinite;
  z-index:1;
  @keyframes gradient  {
    0% {
        border-image-source: linear-gradient(-45deg, #FF3366, #CB5EEE, #ee7752,   #FFCC33, #00B3CC,  #E233FF, #23a6d5);
    }
    50% {
        border-image-source: linear-gradient(15deg, #FF3366, #CB5EEE, #ee7752,   #FFCC33, #00B3CC,  #E233FF, #23a6d5);
    }
    100% {
        border-image-source: linear-gradient(45deg, #FF3366, #CB5EEE, #ee7752,   #FFCC33, #00B3CC,  #E233FF, #23a6d5);
    }
  }
`

const Logo = styled.div`
  display: grid;
  grid-template-columns: 65px;
  align-items: center;
  grid-gap: 10px;
`

const Card = styled.div`
    color: white;
    margin-top: 25px;
    padding: 15px;
    border-radius: 16px;
    font-size: 3em;
    border-image-slice: 1;
    border-width: 3px;
    border-bottom: 10px solid; 
    border-bottom-style: solid;
    border-top: 3px;
    border-top-style: solid;
    border-left-style: solid;
    border-right-style: solid; 
    cursor: pointer;
    display: grid;
    grid-template-columns: 60px 1fr;
    justify-content: center;
    align-items: center;
    grid-gap: 15px;
`

const Section = styled.section`
     width:320px;
     padding-top: 90px;
     background-color: #0E101E;
     padding: 10px 40px;
`

const ToggleButton = styled.div`
    width: 70px;
    cursor: pointer;
    background: white;
    user-select: none;
    border-radius: 3px;
    padding: 2px;
    height: 32px;
    position: relative;
  
   .dialog-button {
    font-size: 14px;
    line-height: 16px;
    font-weight: bold;
    cursor: pointer;
    background: linear-gradient(-45deg, #FF3366, #CB5EEE, #ee7752,   #FFCC33, #00B3CC,  #E233FF, #23a6d5);
    background-size: 400% 400%;
    color: white;
    padding: 8px 12px;
    border-radius: 18px;
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    min-width: 46px;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 38px;
    min-width: unset;
    border-radius: 3px;
    box-sizing: border-box;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.25);
    position: absolute;
    left: 34px;
    cursor: pointer;
    transition: all 0.3s ease;
    transition-timing-function: cubic-bezier(.4,0,.2,1);
    transition-duration: .15s;
    transition-property: all;
    background-size: 400% 400%;
    animation: gradientToggle 5s ease infinite;

    @keyframes gradientToggle  {
        0% {
            background-position: 0% 50%;
        }
        50% {
            background-position: 100% 50%;
        }
        100% {
            background-position: 0% 50%;
        }
      }

  }
  
  .disabled {
    background-color: #707070;
    left: 2px;
  }

`


const Footer = styled.footer`
  padding: 10px 40px;
  display: flex;
  position: fixed;
  background-color: #0E101E;
  height: 72px;
  align-items: center;
  justify-content: space-around;
  overflow: hidden;
  width: 320px;
  border-top: 10px solid;
  border-image-slice: 1;
  border-width: 3px;
  border-image-source:  linear-gradient(-45deg, #FF3366, #CB5EEE, #ee7752,   #FFCC33, #00B3CC,  #E233FF, #23a6d5);
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  transition-duration: .15s;
  transition-property: all;
  animation: gradient 5s ease infinite;
  animation: gradient 5s ease infinite;

  @keyframes gradient  {
    0% {
        border-image-source: linear-gradient(-45deg, #FF3366, #CB5EEE, #ee7752,   #FFCC33, #00B3CC,  #E233FF, #23a6d5);
    }
    50% {
        border-image-source: linear-gradient(15deg, #FF3366, #CB5EEE, #ee7752,   #FFCC33, #00B3CC,  #E233FF, #23a6d5);
    }
    100% {
        border-image-source: linear-gradient(45deg, #FF3366, #CB5EEE, #ee7752,   #FFCC33, #00B3CC,  #E233FF, #23a6d5);
    }
  }
`

const UniSwapLogo = () => <svg width="60px" height="60px" viewBox="0 0 238 272" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink">
    <g id="NFT" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <g id="Group-19" transform="translate(0.358663, 0.627058)" fill="#FF007F">
            <path d="M88.9822619,64.3964132 C87.5328289,75.1013911 89.8190595,84.8628582 95.8409536,93.6808145 C99.9032603,99.6293156 103.932832,104.983196 109.846409,107.805161 C111.748148,108.712673 115.135603,109.387297 120.008773,109.829032 C115.950405,103.076391 113.255207,97.918709 111.923178,94.3559848 C110.591149,90.7932607 109.320829,85.3445276 108.112216,78.0097857 C106.286357,73.2979367 103.235627,69.6806812 98.9600253,67.1580192 C94.6844238,64.6353572 91.3585027,63.7148219 88.9822619,64.3964132 Z" id="Path-137"></path>
            <path d="M197.670087,82.0296842 C197.379128,76.338239 197.527125,72.1604584 198.114079,69.4963424 C198.701034,66.8322264 200.055414,64.0731316 202.17722,61.2190579 C199.639563,69.6693666 199.639563,76.7819457 202.17722,82.5567953 C205.983704,91.2190696 222.395206,103.485824 222.789879,105.528695 C223.184551,107.571567 205.800641,91.3255261 203.988931,91.93443 C202.17722,92.5433338 203.755989,99.7595255 202.687185,104.461657 C201.974649,107.596412 200.686073,110.99865 198.821458,114.668372 C199.773455,106.458841 200.192996,100.280917 200.080083,96.1346013 C200.013675,93.6959851 199.34506,91.1879284 198.114079,89.2676224 C196.205553,86.2903587 193.118616,84.2670569 190.169439,82.5567953 C185.318071,79.7434316 173.608007,76.0111217 175.821485,75.7647743 C177.297137,75.6005427 184.580005,77.688846 197.670087,82.0296842 Z" id="Path-138"></path>
            <path d="M110.802636,204.624881 C116.200693,201.294473 121.77813,198.814774 127.534946,197.185785 C130.935349,196.223582 135.206893,195.552641 140.085535,195.003724 C147.596061,194.158681 156.381378,192.813204 164.365085,184.991208 C164.386051,184.970666 169.996397,180.143886 170.753669,173.95973 C171.715105,166.108289 167.99782,156.501209 168.50499,156.018961 C169.414919,155.153747 178.747736,166.256078 175.066359,178.161861 C171.384982,190.067643 169.368658,193.460654 159.688312,197.83777 C150.007967,202.214886 137.730106,200.316536 129.617321,201.212756 C124.208797,201.810236 117.937236,202.947611 110.802636,204.624881 Z" id="Path-139"></path>
            <path d="M88.5604782,64.1789366 C88.0043949,76.2426143 89.8211923,85.3881599 94.0108705,91.6155735 C96.5705245,95.4201673 100.037068,102.101228 105.938282,106.061327 C108.443601,107.742559 113.247685,108.99846 120.350535,109.829032 C116.144816,103.421535 113.335697,98.2638525 111.923178,94.3559848 C110.51066,90.4481171 109.240339,84.9993841 108.112216,78.0097857 C104.786715,72.4446344 101.902592,68.7980631 99.4598468,67.0700716 C97.0171018,65.34208 93.3839789,64.3783684 88.5604782,64.1789366 Z" id="Path-140"></path>
            <path d="M182.253876,162.669196 C180.945257,168.134305 180.349296,172.230717 180.465992,174.95843 C180.582688,177.686144 181.489315,180.851398 183.185873,184.454192 L207.733123,225.12136 C208.07563,231.237832 208.07563,235.812576 207.733123,238.845591 C207.390615,241.878606 206.42608,245.845141 204.839516,250.745195 C213.46263,245.423272 219.306856,240.382252 222.372195,235.622136 C226.970202,228.481961 230.559721,217.285894 228.764962,206.707195 C226.970202,196.128497 224.673246,192.007374 216.348557,183.452619 C210.798763,177.749449 199.43387,170.821642 182.253876,162.669196 Z" id="Path-142"></path>
            <path d="M74.4990845,232.152552 C80.7827442,232.29406 86.8763246,233.993687 92.7798257,237.251432 C97.0706827,239.619267 101.035532,244.352119 107.87417,249.882992 C110.444354,251.961675 114.075923,254.815719 117.724432,255.696287 C121.372941,256.576854 124.810108,257.404212 129.9947,253.831525 C133.451095,251.449733 135.130188,248.198936 135.031979,244.079132 C134.774054,240.809006 134.215936,238.533106 133.357628,237.251432 C132.499319,235.969758 130.583303,234.551148 127.609581,232.995601 C124.956214,232.363019 122.645348,232.363019 120.676981,232.995601 C117.836806,233.908359 117.023531,236.167763 116.993886,236.223048 C116.214978,237.675612 116.352909,239.943503 116.706696,241.026969 C116.942553,241.74928 117.499325,242.465703 118.377009,243.176239 C117.79941,240.580826 117.704461,238.811919 118.09216,237.869518 C118.67371,236.455917 120.661209,234.9328 122.136732,234.67981 C123.120413,234.51115 124.944697,234.895638 127.609581,235.833272 C129.339993,237.141987 130.398084,238.232323 130.783853,239.104279 C131.169622,239.976236 131.244698,241.447203 131.00908,243.51718 C129.936738,247.542407 128.218047,249.927137 125.853006,250.671369 C122.305445,251.787718 116.353077,249.725875 114.961532,248.567032 C113.569987,247.40819 112.257227,245.097956 111.444987,243.176239 C111.071527,242.292653 110.495856,240.300176 110.749498,238.361577 C111.047503,236.083898 112.260974,233.842348 112.901772,232.995601 C113.692572,231.950641 115.300125,230.689928 117.724432,229.21346 C120.96683,228.483689 123.39621,228.172789 125.01257,228.280761 C126.628931,228.388733 128.866823,229.011405 131.726248,230.148775 C134.924152,231.861948 137.701965,234.2295 140.059686,237.251432 C142.417408,240.273363 145.183609,245.011667 148.358289,251.466342 C150.546468,256.868097 152.599412,260.640859 154.51712,262.78463 C157.393682,266.000287 161.153047,269.234167 165.439476,270.561089 C169.725904,271.88801 172.66476,270.89878 176.836748,269.693972 C179.618073,268.890766 183.16092,266.856772 187.46529,263.591987 C182.339605,265.451023 178.511642,266.494555 175.981401,266.722584 C173.451159,266.950613 170.507789,266.76494 167.151291,266.165564 C163.689403,264.881253 160.608078,260.951322 157.907315,254.37577 C155.963055,249.642077 156.450088,243.278973 154.912663,235.833272 C154.314458,232.936182 151.732615,227.909237 147.650064,222.66013 C143.567514,217.411023 142.011408,216.287571 135.031979,213.690594 C130.379027,211.959276 122.87748,211.559318 112.527338,212.49072 C104.350847,214.26663 97.973437,216.338157 93.3951075,218.705301 C88.8167779,221.072445 82.5181036,225.554862 74.4990845,232.152552 Z" id="Path-143"></path>
            <path d="M152.423829,117.002466 C151.621508,125.989945 153.171169,133.204215 157.072812,138.645276 C160.974454,144.086337 169.637389,149.861747 183.061617,155.971506 L219.040845,172.126344 C223.87939,176.305875 227.012581,179.613791 228.440418,182.050094 C229.868256,184.486396 230.850323,188.200297 231.38662,193.191798 C233.995799,188.123955 235.616324,184.410053 236.248195,182.050094 C237.745477,176.457924 237.384309,171.208701 237.301369,167.387037 C237.165926,161.146194 234.874758,155.022112 230.427864,149.014793 C225.214304,143.530068 220.64671,139.652958 216.725083,137.383463 C212.803456,135.113969 206.666172,132.796033 198.313232,130.429657 C184.759523,128.900876 175.318572,127.356974 169.990381,125.79795 C164.66219,124.238927 158.806673,121.307099 152.423829,117.002466 Z" id="Path-144"></path>
            <path d="M90.9810863,57.8863411 C99.3706182,60.0905569 107.187684,63.6121264 114.432283,68.4510494 C121.676882,73.2899725 127.210777,78.8663656 131.033968,85.1802289 C137.580975,94.5942459 143.281173,101.63212 148.13456,106.293852 C152.987948,110.955584 157.521243,113.74709 161.734445,114.668372 C165.640873,116.083844 169.561957,117.110038 173.497696,117.746954 C177.433436,118.38387 183.540926,118.980587 191.820166,119.537105 C200.08213,120.118849 205.927387,121.17046 209.355936,122.691937 C214.498759,124.974153 219.91654,132.497187 221.578088,133.253968 C223.239636,134.01075 222.021421,129.769999 221.768571,128.263065 C221.032003,123.873252 219.622924,120.250401 218.358769,117.746954 C216.660654,114.384125 212.874794,109.531363 207.001187,103.188667 L203.558369,114.668372 C201.362909,117.359489 199.047179,118.523157 196.611181,118.159376 C194.175183,117.795595 193.041346,116.409106 193.20967,113.999909 C195.052175,109.379288 196.095941,105.775541 196.340967,103.188667 C196.585993,100.601793 196.226324,96.9831564 195.261961,92.332757 C188.66246,86.7539692 180.175459,83.0395606 169.800958,81.1895313 C159.426456,79.3395021 147.915075,79.4877063 135.266814,81.634144 C127.021638,71.4714228 119.673598,64.9703821 113.222695,62.1310219 C106.771793,59.2916617 99.3579228,57.8767681 90.9810863,57.8863411 Z" id="Path-145"></path>
            <path d="M1.13686838e-13,0 L99.4598468,108.909309 C98.4205868,115.389334 96.6672924,119.575092 94.1999634,121.466582 C94.1674446,121.491512 91.6458537,124.280309 85.7462626,126.687913 C84.1573471,127.336344 80.9214264,127.12755 77.2523843,128.155913 C75.8282034,128.555083 73.5416581,129.567303 70.3927487,131.19257 C69.7423812,133.000019 69.0930906,135.394776 68.4448768,138.376842 C67.4725562,142.849941 67.8013562,146.47908 65.9082679,152.663712 C65.3860367,154.369817 64.5447225,156.775909 63.3843252,159.881988 L63.0875784,160.67309 C61.4694747,164.970081 59.2841124,170.511492 56.5314914,177.297323 C57.0840656,182.716179 58.4010026,186.371714 60.4823023,188.263928 C63.5503865,191.053277 67.6913128,195.565541 71.8446996,198.581247 C73.4842406,199.771691 78.9360588,204.469976 79.3169302,206.397333 C81.2641897,216.251221 78.5672089,220.612592 74.9862944,224.003451 L74.6584263,224.309164 C74.3833481,224.561906 74.1038507,224.809864 73.8215691,225.055005 L73.4815995,225.347948 C73.4247501,225.396588 73.3678154,225.445147 73.3108086,225.493641 L72.9680069,225.783942 L72.9680069,225.783942 L72.624102,226.073426 C72.5093529,226.169868 72.3945246,226.2663 72.2797217,226.362847 C69.1510879,228.993978 60.8109655,233.252123 48.062162,236.734939 C46.6948584,237.108469 44.6532167,237.279395 41.9372368,237.247717 C38.747626,231.095706 36.3475459,226.548345 34.7369967,223.605634 C30.5278825,215.91496 27.7189932,209.372172 27.7189932,202.077274 C27.7189932,190.595463 32.932656,180.147381 43.3599816,170.733025 L43.3599816,170.733025 L53.6444969,151.870293 C54.954103,143.251693 56.3423421,136.787334 57.8092141,132.477216 C59.2760861,128.167098 61.9757708,123.30858 65.9082679,117.90166 L65.9082679,117.90166 L35.4317797,61.1000652 L72.2797217,116.344134 C75.7478937,119.311114 79.6816803,119.83029 84.0810814,117.90166 C88.4804825,115.973031 90.2696812,113.323127 89.4486773,109.951947 L89.4486773,109.951947 L1.13686838e-13,0 Z M38.78923,196.3278 C38.052343,196.704527 37.3098851,197.467662 37.9200162,198.886593 C38.5301473,200.305524 39.6123908,200.28344 39.8329368,201.777691 C39.9799674,202.773859 39.6320651,203.773203 38.78923,204.775725 C38.6546712,206.702041 39.5202015,207.6652 41.3858208,207.6652 C44.1842498,207.6652 45.1445493,206.677666 46.282343,204.775725 C47.4201366,202.873783 47.1900142,202.474144 46.459059,200.069995 C45.7281038,197.665847 45.2135897,197.456058 43.0267323,196.479375 C40.839875,195.502692 39.526117,195.951073 38.78923,196.3278 Z" id="Combined-Shape"></path>
            <path d="M119.325088,135.455169 C121.914375,141.539359 118.742087,145.451638 109.808222,147.192005 C100.874358,148.932373 96.1689131,146.818773 95.6918874,140.851206 C97.3026561,133.469895 100.724158,129.347127 105.956394,128.482901 C111.188629,127.618676 115.644861,129.942765 119.325088,135.455169 Z M108.141337,130.372942 C104.551486,130.372942 101.641337,132.163803 101.641337,134.372942 C101.641337,136.582081 104.551486,138.372942 108.141337,138.372942 C111.731188,138.372942 114.641337,136.582081 114.641337,134.372942 C114.641337,132.163803 111.731188,130.372942 108.141337,130.372942 Z" id="Combined-Shape"></path>
        </g>
    </g>
</svg>

const JamLogo = () => <svg xmlns="http://www.w3.org/2000/svg" width="60px" height="60px" fill="none"><path fill="#fff" d="M0 0h100v100H0z" /><path d="M96.42 0H3.5v100h92.92V0z" fill="#fff" /><path d="M66.113 31.858H33.588v36.235h32.525V31.858z" fill="#F47D7D" /></svg>


const EINSLogo = () => <svg width="60px" height="60px" viewBox="0 0 203 225" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink">
    <defs>
        <linearGradient x1="70.1961342%" y1="0%" x2="24.3242416%" y2="100%" id="linearGradient-1">
            <stop stop-color="#377AF8" offset="0%"></stop>
            <stop stop-color="#1EA7F8" offset="28.7595594%"></stop>
            <stop stop-color="#00E1FB" offset="59.3750233%"></stop>
            <stop stop-color="#00CFF8" offset="100%"></stop>
        </linearGradient>
        <linearGradient x1="34.9810332%" y1="0%" x2="69.596629%" y2="100%" id="linearGradient-2">
            <stop stop-color="#D1CDFF" offset="0%"></stop>
            <stop stop-color="#97A5FF" offset="38.2899341%"></stop>
            <stop stop-color="#5CCFFB" offset="71.4085635%"></stop>
            <stop stop-color="#00D0F8" offset="100%"></stop>
        </linearGradient>
        <linearGradient x1="50%" y1="0%" x2="75.0880721%" y2="95.2555055%" id="linearGradient-3">
            <stop stop-color="#D1CDFF" offset="0%"></stop>
            <stop stop-color="#AFA9FF" offset="43.8166677%"></stop>
            <stop stop-color="#72BDFF" offset="100%"></stop>
        </linearGradient>
        <linearGradient x1="70.9265566%" y1="0%" x2="29.2689191%" y2="93.2364085%" id="linearGradient-4">
            <stop stop-color="#A49EFE" offset="0%"></stop>
            <stop stop-color="#8090FC" offset="67.4669297%"></stop>
            <stop stop-color="#527EFA" offset="100%"></stop>
        </linearGradient>
    </defs>
    <g id="NFT" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <g id="Group-17" transform="translate(0.639675, 0.565842)">
            <path d="M169.85411,116.868388 L105.12582,224.089557 L167.680759,180.638036 C176.814337,173.537939 181.566437,164.550578 181.937058,153.675953 C182.307679,142.801328 178.28003,130.53214 169.85411,116.868388 Z" id="Path-132" fill="url(#linearGradient-1)"></path>
            <path d="M9.99697093,71.6637021 C10.2811578,80.2107507 11.0519944,86.551257 12.3094809,90.685221 C13.5669673,94.8191851 16.5084465,100.68285 21.1339185,108.276217 L95.4254733,224.089557 L23.2950182,172.307587 C10.1726846,160.884245 2.60458291,145.781125 0.590713262,126.998228 C-1.42315639,108.21533 1.71226283,89.7704884 9.99697093,71.6637021 Z" id="Path-133" fill="url(#linearGradient-2)"></path>
            <path d="M105.12582,0 L169.059167,100.197138 C177.28492,111.603874 182.648436,120.357808 185.149712,126.45894 C187.650989,132.560072 189.741358,141.987705 191.420819,154.74184 C196.487821,143.633505 199.526821,135.077445 200.537818,129.073658 C201.161514,125.369847 204.021242,106.319666 200.537818,91.9706111 C196.272614,74.4012203 185.178339,61.1319628 181.960481,57.7465553 C178.063209,53.6463582 152.451656,34.3975065 105.12582,0 Z" id="Path-134" fill="url(#linearGradient-3)"></path>
            <path d="M31.5384182,108.658091 C24.8510241,98.2808746 21.1163297,88.2483777 20.3343348,78.5606003 C19.5523399,68.872823 21.719125,59.4812067 26.8346901,50.3857513 L96.5024996,1.54245556 L31.5384182,108.658091 Z" id="Path-135" fill="url(#linearGradient-4)"></path>
        </g>
    </g>
</svg>


const quests = [
    {
        url: "",
        text: "polygon"
    },
    {
        url: "",
        text: "ethglobal"
    },
    {
        url: "",
        text: "chainlink"
    }
]




const App = () => {
    const [quest, setQuest] = React.useState(true);
    const params = {
        src: "https://s3.amazonaws.com/cdn.codewithcorgis.com/animations/logoborder.riv",
        autoplay: true,
        animations: ["still"]
    };
    const { RiveComponent: LogoRive, rive: logorive } = useRive(params);

    const [corgis, setcorgis] = React.useState(true);

    React.useEffect(() => {
        chrome.runtime.sendMessage({ type: "REQ_CORGIS_STATUS" });

        chrome.runtime.onMessage.addListener((message: any) => {
            switch (message.type) {
                case "CORGIS_STATUS":
                    setcorgis(message.corgis);
                    break;
                default:
                    break;
            }
        });
    }, []);

    const Toggle = () => {
        
        chrome.runtime.sendMessage({ type: "TOGGLE_CORGIS", corgis: !corgis });
    };
    const clickQuest = (url: any) => {
        chrome.runtime.sendMessage({ type: "TOGGLE_QUEST", quest: !quest });
        chrome.tabs.create({ url: url, active: false });
    }



    return (
        <>
            <Header >
                <nav style={{ display: "grid", gridTemplateColumns: "1fr 5fr 1fr", maxWidth: "320px", alignItems: "center", justifyContent: "center" }}>
                    <Logo>
                        <div style={{ height: '65px', width: '65px' }}>
                            <LogoRive />
                        </div>
                    </Logo>
                    <div style={{ justifyContent: "center", textAlign: "center" }}>
                        <svg width="200px" height="30px" viewBox="0 0 200 40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink">
                            <g id="NFT" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd" fontFamily="Eina03-SemiBold, Eina 03" fontSize="40" fontWeight="500">
                                <text id="0xcorgis" fill="#EBF0FF">
                                    <tspan x="-1" y="31">0xcorgis</tspan>
                                </text>
                            </g>
                        </svg>
                    </div>

                </nav>
            </Header>
            <Section>
                <div>
                    <h2 style={{ marginTop: "120px", fontSize: "30px", marginBottom: "0px", color: "white" }} >Starter Quest</h2>
                    <p style={{
                        color: "white",
                        margin: "0",
                        fontSize: "16px"
                    }}>Getting started is hard! Try our starter quests in order to learn new skills in web3 guided by the 0xcorgi.</p>

                </div>
                {
                    quests.map((data, index) => {
                        return <motion.div whileHover={{ scale: 1.1 }}
                            whileTap={{ scale: 0.9 }} onClick={() => { clickQuest(data.url) }}>
                            <Card>

                                <section>
                                    {data.text}
                                </section>
                            </Card>
                        </motion.div>
                    })
                }

                <div style={{ marginBottom: "120px" }}>
                    <h2 style={{ marginTop: "30px", fontSize: "30px", marginBottom: "0px", color: "white" }} > Learn 2 Earn</h2>
                    <p style={{
                        color: "white",
                        margin: "0",
                        fontSize: "16px"
                    }}>Explore
                        Press start to play </p>
                </div>


            </Section>

            <Footer style={{
                position: "fixed", display: "grid", gridTemplateColumns: "1fr 1fr", bottom: "0",
                color: "white",
                width: "100%",
                alignItems: "center",
                textAlign: "center",
                justifyItems: "center"
            }}>
                <h1>Show 0xcorgi</h1>
                <ToggleButton className="toggle-container" onClick={Toggle}>
                    <div className={`dialog-button ${corgis ? "" : "disabled"}`}>
                        {corgis ? "ON" : "OFF"}
                    </div>
                </ToggleButton>
            </Footer>
        </>
    );
};

export default App;